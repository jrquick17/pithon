#:kivy 1.0.9
#:import Toolbar kivymd.toolbar.Toolbar
#:import ThemeManager kivymd.theming.ThemeManager
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerDivider kivymd.navigationdrawer.NavigationDrawerDivider
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar
#:import NavigationDrawerSubheader kivymd.navigationdrawer.NavigationDrawerSubheader
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDSwitch kivymd.selectioncontrols.MDSwitch
#:import MDList kivymd.list.MDList
#:import OneLineListItem kivymd.list.OneLineListItem
#:import TwoLineListItem kivymd.list.TwoLineListItem
#:import ThreeLineListItem kivymd.list.ThreeLineListItem
#:import OneLineAvatarListItem kivymd.list.OneLineAvatarListItem
#:import OneLineIconListItem kivymd.list.OneLineIconListItem
#:import OneLineAvatarIconListItem kivymd.list.OneLineAvatarIconListItem
#:import MDTextField kivymd.textfields.MDTextField
#:import MDSpinner kivymd.spinner.MDSpinner
#:import MDCard kivymd.card.MDCard
#:import MDSeparator kivymd.card.MDSeparator
#:import MDDropdownMenu kivymd.menu.MDDropdownMenu
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import colors kivymd.color_definitions.colors
#:import SmartTile kivymd.grid.SmartTile
#:import MDSlider kivymd.slider.MDSlider
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import MDTab kivymd.tabs.MDTab
#:import MDProgressBar kivymd.progressbar.MDProgressBar
#:import MDAccordion kivymd.accordion.MDAccordion
#:import MDAccordionItem kivymd.accordion.MDAccordionItem
#:import MDAccordionSubItem kivymd.accordion.MDAccordionSubItem
#:import MDThemePicker kivymd.theme_picker.MDThemePicker
#:import MDBottomNavigation kivymd.tabs.MDBottomNavigation
#:import MDBottomNavigationItem kivymd.tabs.MDBottomNavigationItem


<Dart>:
    size: 20, 20
    canvas:
        Color:
            rgba: self.r, self.g, 0, 1
        Ellipse:
            pos: self.x / 100 * root.width, self.y / 100 * root.height
            size: self.size


#<Game>:
#    speed_slider: speed_slider
#    MDSlider:
#        id: speed_slider
#        min: 0
#        max: 100
#        x: 0
#        y: 0
#        height: 100
#        width: self.parent.width


<PiDarts>:
    id: darts
    size_hint: 1, 1
    canvas:
        Color:
            rgb: 0.5, 0.5, 0.5, 1
        Rectangle:
            size: self.width, self.height
    GridLayout:
        cols: 1
        rows: 1
        pos: 0, 0
        height: scoreboard.y
        width: scoreboard.y
        canvas:
            Color:
                rgb: 0.5, 0.5, 0.5, 1
            Rectangle:
                size: self.parent.height, self.parent.height
        canvas:
            Color:
                rgba: 1, 1, 1, 1
            Ellipse:
                pos: 0, 0
                size: self.parent.height, self.parent.height
    MDCard:
        pos: 20, self.parent.top - self.height - 20
        width: self.parent.width - 40
        GridLayout:
            id: scoreboard
            pos: self.parent.pos
            cols: 1
            rows: 3
            Label:
                color: 1, 0, 0, 1
                text: 'Estimate: ' + str(darts.estimate)
                width: self.parent.width
            Label:
                color: 1, 0, 0, 1
                text: 'Pi:           ' + str(darts.PI)
                width: self.parent.width
            Label:
                color: 1, 0, 0, 1
                text: 'Iterations: ' + str(darts.iterations)
    #        Label:
    #            color: 1, 0, 0, 1
    #            text: 'Speed: ' + str(root.speed)
    #            markup: True
    #            pos: 0, 0

<PiSeries>:
    id: series
    canvas:
        Color:
            rgb: 0.5, 0.5, 0.5, 1
        Rectangle:
            size: self.width, self.height
    Label:
        text: series.equation
        text_size: self.width, None
        size_hint: 1, 1
        height: self.texture_size[1]
        width: self.parent.width
    MDCard:
        pos: 20, self.parent.top - self.height - 20
        width: self.parent.width - 40
        GridLayout:
            id: scoreboard
            pos: self.parent.pos
            cols: 1
            rows: 3
            Label:
                color: 1, 0, 0, 1
                text: 'Estimate: ' + str(series.estimate)
                width: self.parent.width
            Label:
                color: 1, 0, 0, 1
                text: 'Pi:           ' + str(series.PI)
                width: self.parent.width
            Label:
                color: 1, 0, 0, 1
                text: 'Iterations: ' + str(series.iterations)
    #        Label:
    #            color: 1, 0, 0, 1
    #            text: 'Speed: ' + str(root.speed)
    #            markup: True
    #            pos: 0, 0


NavigationLayout:
    id: nav_layout
    height: root.height
    width: root.width
    size_hint: 1, 1
    MDNavigationDrawer:
        id: nav_drawer
        NavigationDrawerToolbar:
            title: 'Methods'
        NavigationDrawerIconButton:
            icon: 'checkbox-blank-circle'
            text: 'Dart Board'
            on_release: app.root.ids.scr_mngr.current = 'darts'
        NavigationDrawerIconButton:
            icon: 'checkbox-blank-circle'
            text: 'Gregory-Leibniz Series'
            on_release: app.root.ids.scr_mngr.current = 'series'
    BoxLayout:
        orientation: 'vertical'
        Toolbar:
            id: toolbar
            title: 'PiThon'
            md_bg_color: app.theme_cls.primary_color
            background_palette: 'Primary'
            background_hue: '500'
            left_action_items: [['menu', lambda x: nav_layout.toggle_nav_drawer()]]
        ScreenManager:
            id: scr_mngr
            Screen:
                name: 'darts'
                PiDarts:
                    pos: 0, 0
                    size_hint: 1, 1
            Screen:
                name: 'series'
                PiSeries:
                    pos: 0, 0